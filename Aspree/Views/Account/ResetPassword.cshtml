@using Aspree.Models
@model Aspree.Core.ViewModels.ResetPassword
@{
    ViewBag.Title = "Reset Password";
    Layout = null;

    string testSiteBackgroundClass = string.Empty;
    bool isTesturipath = false;
    try
    {
        string absolutePath = string.Empty;
        isTesturipath = Request.Url.AbsoluteUri.ToLower().Contains(Aspree.Utility.ConfigSettings.TestSiteKeyword);
        absolutePath = isTesturipath ? "test/" : "";
        if (absolutePath == "test/")
        {
            testSiteBackgroundClass = "draft-watermark";
        }
    }
    catch (Exception exc)
    { }

}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <!-- Tell the browser to be responsive to screen width -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <!-- Favicon icon -->
    <link rel="icon" type="image/png" sizes="16x16" href="/content/assets/images/favicon.png">
    <title>Aspree | Reset Password</title>
    <link href="/content/assets/css/custom-style.css" rel="stylesheet">
    <!-- Roboto fonts css; ( font-family: 'Roboto', sans-serif; ) -->
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
    <!-- Bootstrap Core CSS -->
    <link href="/content/vendor/css/bootstrap.min.css" rel="stylesheet">
    <!-- fontawesome icon CSS -->
    <link href="/content/vendor/css/fontawesome-all.min.css" rel="stylesheet">
    <!-- animate CSS -->
    <link href="/content/assets/css/animate.css" rel="stylesheet">
    <!-- Custom CSS -->
    <link href="/content/assets/css/style.css" rel="stylesheet">
    <!-- Custom Style CSS -->
    <link href="/content/assets/css/responsive.css" rel="stylesheet">
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->
    <link href="~/Content/Site.css" rel="stylesheet" />
</head>

<body class="body-background">
    <!-- ==========================================================
    Main Content
    =========================================================== -->

    <div id="page-wrapper">
        <section class="login-page @testSiteBackgroundClass">
            <div class="login-page-wrap">
                <div class="row no-gutters">
                    <div id="processLoader">
                        <div class="loader"></div>
                    </div>
                    <div id="blocker"></div>
                    <div class="col-md-5">
                        <div class="login-page-logo full-height1 height-fill d-flex align-items-center justify-content-center blue-back dark-gray">
                            <div class="lp-logo"><a href="">Universal Data System</a></div>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <div class="login-form-wrap login-form-blue d-flex align-items-center full-height1 gray-back" style="padding:3em 5rem!important">
                            <div class="login-form-height">
                                <div class="login-form-inner " id="divLoginForm">
                                    <div class="lp-heading text-left">
                                        <h3 class="lp-title">Please set your password and security question with answer.</h3>
                                    </div>
                                    <div id="alerts" class="row alerts"></div>
                                    <form id="frmResetPassword" method="post" class="login-form form-horizontal form-mat-small lp-pholder lp-form m-t-40">
                                        <div class="form-group">

                                        </div>
                                        <div class="login-form-field" id="login">
                                            <div class="form-group">
                                                <label for="QuestionGuid" class="">Security Question<span class="text-danger">*</span></label>
                                                <select class="form-control valid" data-val="true" data-val-required="The Security Question is required." id="QuestionGuid" name="QuestionGuid" required="required">
                                                    @foreach (var item in ViewBag.SecurityQuestions)
                                                    {
                                                        <option value="@item.Guid">@item.Question</option>
                                                    }
                                                </select>
                                                <span class="form-control-feedback field-validation-valid" data-valmsg-for="QuestionGuid" data-valmsg-replace="true"></span>
                                            </div>
                                            <div class="form-group">
                                                <label for="Answer" class="">Security Answer<span class="text-danger">*</span></label>
                                                <input class="form-control valid" data-val="true" data-val-required="The Answer is required." id="Answer" maxlength="50" name="Answer" required="required" type="text">
                                                <span class="form-control-feedback field-validation-valid" data-valmsg-for="Answer" data-valmsg-replace="true"></span>
                                            </div>
                                            <div class="form-group">
                                                <label class="form-control-label">Password<span class="text-danger">*</span></label>
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="Guid" id="Guid" value="@Model.Guid" />
                                                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "form -control-feedback" })
                                            </div>
                                            <div class="form-group">
                                                <label class="form-control-label">Confirm Password<span class="text-danger">*</span></label>
                                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "form-control-feedback" })
                                            </div>

                                        </div><!-- /.login-form-field -->
                                        <div class="clearfix"></div>
                                        <div class="form-group mt-3 btn-small">
                                            <button class="btn waves-effect waves-light btn-info pull-left" onclick="Login.resetPassword()" type="button">Set Password</button>
                                            <button type="button" onclick="location.href='/account/logout'" class="btn waves-effect waves-light btn-info pull-right mt-0" id="Google" name="provider" value="Google" title="Log in using your Google account">Go To Login</button>
                                        </div>
                                    </form>

                                    <form id="frmBackToLogin" action="/" method="post" class="login-form form-horizontal form-mat-small lp-pholder lp-form m-t-40 hide">
                                        <div class="clearfix"></div>
                                        <div class="form-group mt-3 btn-small text-center">
                                            <button type="button" onclick="location.href='/account/logout'" class="btn waves-effect waves-light btn-info mt-0" id="LoginBack" name="LoginBack" value="Go To Login" title="Log in using your Google account">Go To Login</button>
                                        </div>
                                    </form>

                                </div><!-- /.login-form-inner -->
                            </div>
                        </div><!-- /.login-form-wra -->
                        <div class="lp-footer">
                            <p class="text-center"><a href="https://www.monash.edu/disclaimer-copyright">Terms of use.</a><a href="https://www.monash.edu/privacy-monash" class="ml-2">Privacy policy</a></p>
                        </div>
                    </div>
                </div>
            </div>
        </section><!-- /.login-page -->
    </div>
    <!-- ==========================================================
    End Main Content
    =========================================================== -->
    <!-- ==========================================================
    All Jquery Import
    =========================================================== -->
    <!-- ==========================================================
    All Jquery Import
    =========================================================== -->
    <script src="/content/assets/js/jquery.min.js"></script>
    <!-- Bootstrap tether Core JavaScript -->
    <script src="/content/vendor/js/popper.min.js"></script>
    <script src="/content/vendor/js/bootstrap.min.js"></script>
    <!--Wave Effects -->
    <script src="/content/assets/js/jquery.slimscroll.js"></script>
    <script src="/content/assets/js/waves.js"></script>

    <!--Custom JavaScript -->
    <script src="/content/assets/js/custom.js"></script>
    <script src="~/Content/app/Common.js"></script>
    @Scripts.Render("~/bundles/jqueryval")
    <!--custom-script JS -->
    <script>
        App.ApiUrl = "@Aspree.Utility.ConfigSettings.WebApiUrl";
        App.IsTestSite = @(isTesturipath == true ? "true" : "false");
        var Login = {};

        Login.resetPassword = function () {
            var pass = $("#Password").val().trim();
            var Answer = $("#Answer").val().trim();
            if (pass == "" || Answer == "") {
                App.showError1("Please enter all mandatory fields");
                return;
            }
            else {
                
                let url = "Account/CheckUserpassword"  ;
                App.postData(App.ApiUrl + url, pass, function (result) {
                    
                    if (result) {
                        App.showError1("This an unsafe password that has been used previously in data breaches. Please choose a different password.");
                        return;
                    }
                    else {
                        if (!$('.login-form').valid()) return;
                        var strength = 0;
                        var arr = [/.{10,}/, /[A-Z]+/, /[-!$%^&#*()_+|~@@=`{}\[\]:";'<>?,.\/]/];
                        jQuery.map(arr, function (regexp) {
                            if (pass.match(regexp))
                                strength++;
                        });
                        if (strength >= 3) {
                            let userData = {
                                Password: pass,
                                Guid: $("#Guid").val(),
                                ConfirmPassword: $("#ConfirmPassword").val().trim(),
                                QuestionGuid: $("#QuestionGuid").val(),
                                Answer: $("#Answer").val(),
                            };

                            let url = "Account/ResetForgetPassword/" + userData.Guid;
                            if(App.IsTestSite===true){
                                url = "Review/ResetForgetPassword/" + userData.Guid;
                            }
                            App.postData(App.ApiUrl + url, userData, function (result) {
                                if (result) {
                                    $('#Password').val("");
                                    $("#ConfirmPassword").val("");
                                    $("#Answer").val("");
                                    $('#frmResetPassword').addClass('hide');
                                    $('#frmBackToLogin').removeClass('hide');
                                    App.showSuccess("Your account password has been set successfully.");

                                } else {
                                    App.showError("Some unknow error has occured, please try again.");
                                    return;
                                }
                            }, "PUT");
                        }
                        else {
                            App.showError1("Your password does not meet complexity requirements. It must contain at least 10 characters including one upper case and one non-alphanumeric character.");
                            return;
                        }
                    }
                }, "POST");
            }
        }
    </script>
    @if (TempData["Success"] != null)
    {
        <script>
            App.showSuccess("@TempData["Success"]");
        </script>
    }
    @if (TempData["Error"] != null)
    {
        <script>
            App.showError("@TempData["Error"]");
        </script>
    }
</body>
</html>