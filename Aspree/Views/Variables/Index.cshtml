@model  List<Aspree.Core.ViewModels.VariableCategoryViewModel>
@{
    ViewBag.Title = "Variables";
    Layout = "~/Views/Shared/_LayoutNew.cshtml";
    var Roles = ViewBag.Roles as List<Aspree.Core.ViewModels.RoleModel>;
    var VariableTypes = ViewBag.VariableTypes as List<Aspree.Core.ViewModels.VariableTypeViewModel>;
    var ValidationRules = ViewBag.ValidationRules as List<Aspree.Core.ViewModels.ValidationRuleViewModel>;
    var IsProjectAdmin = ViewBag.LoggedInUser.Roles.Contains("Project Admin");
    var IsSystemAdmin = ViewBag.LoggedInUser.Roles.Contains("System Admin");

    var lookupVariablesPreviewViewModelList =ViewBag.LookupVariablesPreviewViewModelList as List<Aspree.Core.ViewModels.LookupVariablesPreviewViewModel>;
}



@section NavBarLeft{
    <h3 class="text-themecolor m-b-0 m-t-0">Variables</h3>
    @if (!IsProjectAdmin)
    {
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item active">Variables</li>
        </ol>
    }
    else
    {
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item">Project Builder</li>
            <li class="breadcrumb-item active">Variables</li>
        </ol>
    }
}

@section NavBarRight{
}

<div class="col-sm-4 col-md-4 col-lg-3">
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Library</h3>
            <h4 class="card-subtitle">Existing Variables</h4>
            <form class="form-horizontal" autocomplete="off">
                <div class="input-group form-group">
                    <input onkeyup="Variable.search(false)" class="form-control" id="search-var-text" style="border-radius: .25rem 0 0 .25rem;" />
                    <div class="input-group-append">
                        <button onclick="Variable.search(true)" class="btn btn-info" type="button"><i class="fas fa-search"></i></button>
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-10" for="NewVariable" style="color:black">New Variable</label>
                    <button type="button" id="btnResetVariable" onclick="Variable.resetVariable()" class="btn btn-sm waves-effect waves-light btn-info m-b-5">
                        <i class="fas fa-plus-circle"></i>
                    </button>
                </div>
            </form>
        </div><!-- /.card-header -->
        <div class="card-body">
            <div class="pb-library-list-wrap">
                <div class="list-menu-wrap">
                    <ul class="list-menu">
                        @foreach (var menu in Model)
                        {
                            <li class="list-dropdown">
                                @if (ViewBag.LoggedInUser.Roles.Contains("System Admin"))
                                {
                                    if (menu.IsDefaultVariableCategory != (int)Aspree.Core.Enum.DefaultFormType.Default)
                                    {
                                        <button title="Edit" onclick="Category.editCategories('@menu.Guid')" type="button" class="btn-sm waves-effect waves-light btn-info"><i class="far fa-edit"></i></button>
                                    }
                                }
                                <a href="javascript:void(0);" id="@menu.Guid">@menu.CategoryName</a>
                                <div class="list-submenu" style="display:none">
                                    <ul class="variable-categories">
                                        @foreach (var subMenu in menu.Variables)
                                        {
                                            <li data-variable="@subMenu.Guid" onmousedown="Variable.setFormula('{{@subMenu.Name}}')">

                                                @if (subMenu.IsDefaultVariable == (int)Aspree.Core.Enum.DefaultVariableType.Default || subMenu.IsDefaultVariable == (int)Aspree.Core.Enum.DefaultVariableType.Heading)
                                                {
                                                    <a class="sub-category-txt" data-text="@subMenu.Name.ToLower()" href="javascript:void(0);" onclick="Variable.confirmEditDefault('@subMenu.Guid', '@subMenu.IsDefaultVariable')">
                                                        @subMenu.Name
                                                        @if (subMenu.IsDefaultVariable == (int)Aspree.Core.Enum.DefaultVariableType.Default || subMenu.IsDefaultVariable == (int)Aspree.Core.Enum.DefaultVariableType.Heading)
                                                        {
                                                            
                                                            <i>(@menu.CategoryName)</i>
                                                        }
                                                        else if (!subMenu.IsApproved)
                                                        {
                                                            <i> (draft)</i>
                                                        }
                                                    </a>
                                                }
                                                else
                                                {
                                                    <a class="sub-category-txt" data-text="@subMenu.Name.ToLower()" href="javascript:void(0);" onclick="Variable.confirmEdit('@subMenu.Guid', '@subMenu.IsDefaultVariable')">
                                                        @subMenu.Name
                                                        @if (subMenu.IsDefaultVariable == (int)Aspree.Core.Enum.DefaultVariableType.Default)
                                                        {
                                                            <i> (Default)</i>
                                                        }
                                                        else if (!subMenu.IsApproved)
                                                        {
                                                            <i> (draft)</i>
                                                        }
                                                    </a>
                                                }

                                            </li>
                                        }
                                    </ul>
                                </div>
                            </li>
                        }
                    </ul>
                </div><!-- /.list-menu-wrap -->
            </div>
        </div><!-- /.card-body -->
    </div>
</div>
<div class="col-sm-8 col-md-8 col-lg-9">
    <div class="card">
        <div class="card-body">
            @*@if (IsProjectAdmin)
                {*@
            @Html.Partial("~/Views/Shared/ProjectBuilder.cshtml")
            @*}*@
        </div>
        <div class="row p-10">
            <div class="col-sm-6 col-md-6 col-lg-7 pull-left">
                <div class="card">
                    <div class="card-header">
                        Create a New Variable or Edit an Existing Variable
                    </div>
                    <div class="card-body">
                        <form id="variableForm" class="form-horizontal" method="post" autocomplete="off">
                            <div class="form-group">
                                <input type="hidden" id="ProjectId" name="ProjectId" value="@ViewBag.ProjectId" />
                                <input type="hidden" name="Guid" id="Guid" value="" />
                                <label for="Name">Variable Category<span class="text-danger">*</span></label>
                                @if (ViewBag.LoggedInUser.Roles.Contains("System Admin") || ViewBag.LoggedInUser.Roles.Contains("Project Admin"))
                                {
                                <div class="col-sm-11 col-sm-offset-3 p-l-0" style="display:inline-block">
                                    <select class="form-control" id="VariableCategoryId" name="VariableCategoryId">
                                        <option value="">Select Variable Category</option>
                                        @foreach (var item in Model)
                                            {
                                                if (item.IsDefaultVariableCategory != (int)Aspree.Core.Enum.DefaultVariableType.Default)
                                                {
                                        <option id="@item.Guid" value="@item.Guid">@item.CategoryName</option>
                                                }
                                                else
                                                {
                                        <option class="dropdown-disabled-options-background" disabled id="@item.Guid" value="@item.Guid">@item.CategoryName</option>
                                                }
                                            }
                                    </select>
                                    @Html.ValidationMessage("VariableCategory", new { @class = "form-control-feedback" })
                                </div>
                                <button type="button" title="Add New Category" onclick="Category.addCategory()" class="btn btn-sm waves-effect waves-light btn-info m-b-5">
                                    <i class="fas fa-plus-circle"></i>
                                </button>
                                }
                                else
                                {
                                <div class="form-group">
                                    <select class="form-control" id="VariableCategoryId" name="VariableCategoryId">
                                        @foreach (var item in Model)
                                            {
                                                if (item.IsDefaultVariableCategory != 0)
                                                {
                                        <option id="@item.Guid" value="@item.Guid">@item.CategoryName</option>
                                                }
                                                else
                                                {
                                        <option class="dropdown-disabled-options-background" disabled id="@item.Guid" value="@item.Guid">@item.CategoryName</option>
                                                }
                                            }
                                    </select>
                                    @Html.ValidationMessage("VariableCategory", new { @class = "form-control-feedback" })
                                </div>
                                }
                            </div>

                            <div class="form-group">
                                <label for="VariableName">Variable Name<span class="text-danger">*</span></label>
                                @Html.TextBox("VariableName", "", new { @class = "form-control", @required = "required", @maxlength = "30" })
                                @Html.ValidationMessage("VariableName", new { @class = "form-control-feedback" })
                                <div class="row hide">
                                    <div class="col-sm-6 float-left">
                                    </div>
                                    <div class="col-sm-6 float-left">
                                        <label for="VariableLabel">Variable Label<span class="text-danger">*</span></label>
                                        @Html.TextBox("VariableLabel", "", new { @class = "form-control", @required = "required", @maxlength = "30" })
                                        @Html.ValidationMessage("VariableLabel", new { @class = "form-control-feedback" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label for="Question">Question Text<span class="text-danger">*</span></label>
                                @Html.TextBox("Question", "", new { @class = "form-control", @required = "required", @maxlength = "200" })
                                @Html.ValidationMessage("Question", new { @class = "form-control-feedback" })
                            </div>

                            <div class="form-group">
                                <label for="VariableType">Variable Type<span class="text-danger">*</span></label>
                                <select class="form-control" id="VariableType" name="VariableType" onchange="Variable.onVariableTypeChange(this)">
                                    @foreach (var item in VariableTypes)
                                    {
                                        if (item.Type == "Other Text" || item.Type == "Heading") { continue; }
                                    <option value="@item.Guid" data-text="@item.Type">@item.Type</option>
                                    }
                                </select>
                                @Html.ValidationMessage("VariableType", new { @class = "form-control-feedback" })
                            </div>

                            <div class="form-group hide" id="value-container">
                                <div class="col-sm-11 col-sm-offset-3 p-l-0" style="display:inline-block">
                                    <div class="row">
                                        <div class="col-sm-4">
                                            <label for="Value" style="display:block">Values</label>
                                            @Html.TextBox("Value", "", new { @class = "form-control", @type = "number", @required = "required", @maxlength = "50" })
                                        </div>
                                        <div class="col-sm-8">
                                            <label for="Description" style="display:block">Description</label>
                                            @Html.TextBox("Description", "", new { @class = "form-control", @required = "required", @maxlength = "50" })
                                        </div>
                                    </div>
                                </div>
                                <button type="button" title="Add New Value" id="btnAddValue" onclick="Variable.addValue()" class="btn btn-sm waves-effect waves-light btn-info" style="margin-bottom:-60px;">
                                    <i class="fas fa-plus-circle"></i>
                                </button>
                                <ul class="list-group m-t-10" id="Values"></ul>
                                @Html.ValidationMessage("Value", new { @class = "form-control-feedback" })
                            </div>

                            <div class="form-group hide" id="lkup-container">
                                <div class="col-sm-12 col-sm-offset-3 p-l-0" style="display:inline-block">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <label for="LookupVariable" style="display:block">Entity Type</label>
                                            <select class="form-control" id="LookupVariableEntityType" name="LookupVariableEntityType" onchange="Variable.EntityTypeChange(this)">
                                                <option value="">Entity Type</option>
                                            </select>
                                        </div>
                                        <div class="col-sm-6">
                                            <label for="LookupEntity" style="display:block">Entity Sub-Type</label>
                                            <select class="form-control" id="LookupVariableEntitySubtype" name="LookupVariableEntitySubtype" onchange="Variable.EntitySubTypeChange(this)">
                                                <option value="">Entity Subtype</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group datetype-container hide">
                                <label for="DateFormat" style="display:block">Date Format<span class="text-danger">*</span></label>
                                @Html.DropDownList("DateFormat", ViewBag.DateFormat as SelectList, new { @class = "form-control", @onchange= "Variable.setDatepicker($(this).val())" })
                            </div>

                            <div class="form-group datetype-container hide">
                                <div class="row">
                                    <div class="col-sm-6">
                                        <label for="StartYear" style="display:block">Start Year<span class="text-danger">*</span></label>
                                        <select id="StartYear" class="form-control" onchange="Variable.setDatepicker($(this).val())"></select>
                                    </div>
                                    <div class="col-sm-6">
                                        <label for="StopYear" style="display:block">Stop Year<span class="text-danger">*</span></label>
                                        <select id="StopYear" class="form-control" onabort="Variable.setDatepicker($(this).val())"></select>
                                    </div>
                                </div>
                                @Html.ValidationMessage("YearRange", new { @class = "form-control-feedback" })
                          </div>

                            <div class="form-group datetype-container hide">
                                <label for="CanFutureDate" style="display:block">Can this date be a future date?<span class="text-danger">*</span></label>
                                <select class="form-control" id="CanFutureDate" name="CanFutureDate">
                                    <option value="true">Yes</option>
                                    <option value="false">No</option>
                                </select>
                            </div>

                            <div class="range-container form-group hide" id="range-container">
                                <label for="AbsoluteRange">Absolute Data Entry Range</label>
                                <div id="AbsoluteRange">
                                    <div class="form-group row m-0">
                                        <label for="fromDataEntryRange" class="col-3 col-form-label">From</label>
                                        <div class="col-lg-3">
                                            <input class="form-control form-control-sm numberonly" id="fromDataEntryRange" name="fromDataEntryRange" placeholder="Minimum" type="number" />
                                        </div>
                                        <label for="toDataEntryRange" class="col-3 col-form-label">To</label>
                                        <div class="col-lg-3">
                                            <input class="form-control form-control-sm numberonly" id="toDataEntryRange" name="toDataEntryRange" placeholder="Maximum" type="number" />
                                        </div>
                                    </div>
                                    <div class="form-group row m-0">
                                        <label for="d" class="col-3 col-form-label"></label>
                                        <label class="custom-control custom-checkbox">
                                            <input type="checkbox" name="NoMinimum" id="NoMinimum" class="custom-control-input" />
                                            <span class="custom-control-label">No Minimum</span>
                                        </label>
                                        <label for="s" class="col-2 col-form-label"></label>
                                        <label class="custom-control custom-checkbox">
                                            <input type="checkbox" name="NoMaximum" id="NoMaximum" class="custom-control-input" />
                                            <span class="custom-control-label">No Maximum</span>
                                        </label>
                                    </div>
                                    @Html.ValidationMessage("AbsoluteRange", new { @class = "form-control-feedback" })

                                </div>
                            </div>
                            <div class="range-container form-group hide" id="range-container">
                                <label for="OutsideRangeValidation">Message If Outside Data Entry Range<span class="text-danger" id="OutsideDataEntryRangeRequiredStat">*</span></label>
                                @Html.TextBox("OutsideRangeValidation", "", new { @class = "form-control", @required = "required", @maxlength = "100" })
                                @Html.ValidationMessage("OutsideRangeValidation", new { @class = "form-control-feedback" })
                            </div>
                            <div class="form-group">
                                <label for="MissingValidation">Message If Missing<span class="text-danger"></span></label>
                                @Html.TextBox("MissingValidation", "", new { @class = "form-control", @maxlength = "100" })
                                @Html.ValidationMessage("MissingValidation", new { @class = "form-control-feedback" })
                            </div>

                            <div class="form-group hide" id="formula-container">
                                <label for="Formula">Formula</label>
                                @Html.TextBox("Formula", "", new { @class = "form-control", @required = "required", @maxlength = "100" })
                                @Html.ValidationMessage("Formula", new { @class = "form-control-feedback" })
                            </div>

                            <div class="form-group hide">
                                <label for="ValueDescription">Value Description</label>
                                @Html.TextBox("ValueDescription", "", new { @class = "form-control", @required = "required", @maxlength = "200" })
                                @Html.ValidationMessage("ValueDescription", new { @class = "form-control-feedback" })
                            </div>

                            <div class="form-group">
                                <label class="custom-control custom-checkbox">
                                    <input type="checkbox" name="isHelpTextRequired" id="isHelpTextRequired" class="custom-control-input" />
                                    <span class="custom-control-label">Help Text Required?</span>
                                </label>
                            </div>


                            <div class="form-group" id="divHelpText">
                                <label for="HelpText">Help Text<span class="text-danger">*</span></label>
                                @Html.TextBox("HelpText", "", new { @class = "form-control", @required = "required", @maxlength = "200" })
                                @Html.ValidationMessage("HelpText", new { @class = "form-control-feedback" })
                            </div>

                            <div class="form-group hide" id="divValidationRuleIds">
                                <label for="ValidationRuleIds">Validation Rule</label>
                                <select class="form-control selectpicker" id="ValidationRuleIds" name="ValidationRuleIds" multiple data-style="form-control btn-secondary">
                                    @foreach (var item in ValidationRules)
                                                {
                                    <option value="@item.Guid" data-min="@item.MinRange" data-max="@item.MaxRange" data-regex="@item.RegEx">@item.RuleType</option>
                                                }
                                    <option value="{00000000-0000-0000-0000-000000000000}">Custom</option>
                                </select>
                                @Html.ValidationMessage("ValidationRuleIds", new { @class = "form-control-feedback" })
                            </div>

                            <div class="form-group" id="divMaxMinRange" style="display:none;">
                                <div class="row">
                                    <div class="col-sm-6 float-left">
                                        <label for="MaxRange">Max<span class="text-danger">*</span></label>
                                        <input type="text" id="MaxRange" name="MaxRange" class="form-control" />
                                        <span class="field-validation-valid form-control-feedback" data-valmsg-for="MaxRange" data-valmsg-replace="true"></span>
                                    </div>
                                    <div class="col-sm-6 float-left">
                                        <label for="MinRange">Min<span class="text-danger">*</span></label>
                                        <input type="text" id="MinRange" name="MinRange" class="form-control" />
                                        <span class="field-validation-valid form-control-feedback" data-valmsg-for="MinRange" data-valmsg-replace="true"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group" id="divCustomRegEx" style="display:none;">
                                <label for="CustomRegEx">RegEx for Custom Validation <span class="text-danger">*</span></label>
                                <input type="text" id="CustomRegEx" name="CustomRegEx" class="form-control" />
                                <span class="field-validation-valid form-control-feedback" data-valmsg-for="CustomRegEx" data-valmsg-replace="true"></span>
                            </div>

                            <div class="form-group hide">
                                <label for="ValidationMessage">Validation Message</label>
                                @Html.TextBox("ValidationMessage", "", new { @class = "form-control", @maxlength = "100" })
                                @Html.ValidationMessage("ValidationMessage", new { @class = "form-control-feedback" })
                            </div>

                            <div class="form-group hide">
                                <label for="VariableType">User role to view<span class="text-danger">*</span></label>
                                <select class="form-control selectpicker" id="VariableRoles" name="VariableRoles" multiple data-style="form-control btn-secondary">
                                    @foreach (var item in Roles)
                                                {
                                                    if (!item.IsSystemRole)
                                                    {
                                    <option value="@item.Guid" data-text="@item.Name">@item.Name</option>
                                                    }
                                                }
                                </select>
                                @Html.ValidationMessage("VariableRoles", new { @class = "form-control-feedback" })
                            </div>

                            <div class="form-group hide">
                                <label class="custom-control custom-checkbox">
                                    <input type="checkbox" checked name="IsRequired" id="IsRequired" class="custom-control-input" />
                                    <span class="custom-control-label">Is Required?</span>
                                </label>
                                @Html.ValidationMessage("IsRequired", new { @class = "form-control-feedback" })
                            </div>

                            <div class="form-group">
                                @*<label for="CanCollectMultiple" >Can this be collected multiple times?</label>*@
                                <label class="custom-control custom-checkbox">
                                    <input type="checkbox" name="CanCollectMultiple" id="CanCollectMultiple" class="custom-control-input" />
                                    <span class="custom-control-label">Can this be collected multiple times?</span>
                                </label>
                                @Html.ValidationMessage("CanCollectMultiple", new { @class = "form-control-feedback" })
                            </div>

                            @if (IsProjectAdmin)
                                        {
                            <div id="divIsApproved" class="form-group">
                                <label for="Comment">System Admin Approval</label>
                                <select id="IsApproved" name="IsApproved" disabled class="form-control" onchange="Variable.onIsApprovedChange(this)">
                                    <option value="false">No</option>
                                    <option value="true">Yes</option>
                                </select>
                                @Html.ValidationMessage("IsApproved", new { @class = "form-control-feedback" })
                            </div>

                            <div id="divComment" class="form-group)">
                                <label for="Comment">System Admin Comment</label>
                                @Html.TextArea("Comment", "", new { @class = "form-control", @maxlength = "200", @disabled = "disabled" })
                                @Html.ValidationMessage("Comment", new { @class = "form-control-feedback" })
                            </div>
                                        }
                                        else if (IsSystemAdmin)
                                        {
                            <div id="divIsApproved" class="form-group)">
                                <label for="Comment">System Admin Approval</label>
                                <select id="IsApproved" name="IsApproved" class="form-control" onchange="Variable.onIsApprovedChange(this)">
                                    <option value="false">No</option>
                                    <option value="true">Yes</option>
                                </select>
                                @Html.ValidationMessage("IsApproved", new { @class = "form-control-feedback" })
                            </div>

                            <div id="divComment" class="form-group)">
                                <label for="Comment">System Admin Comment</label>
                                @Html.TextArea("Comment", "", new { @class = "form-control", @maxlength = "200" })
                                @Html.ValidationMessage("Comment", new { @class = "form-control-feedback" })
                            </div>
                                        }

                            <input type="hidden" name="IsSystemAdmin" id="IsSystemAdmin" value="@(IsSystemAdmin ? "true" : "false")" />
                            <input type="hidden" name="IsProjectAdmin" id="IsProjectAdmin" value="@(IsProjectAdmin ? "true" : "false")" />
                            <input type="hidden" name="IsDraft" id="IsDraft" />
                            <input type="hidden" name="IsVariableLogTable" id="IsVariableLogTable" />

                            @if (IsSystemAdmin || IsProjectAdmin)
                            {
                                <button id="btnDeleteVariable" type="button" class="btn btn-danger waves-effect waves-light btn-info pull-right m-r-10 hide" data-toggle="modal" data-target="#manage-confirm">Delete</button>
                            }

                            <a href="/projectbuilder" class="btn btn-inverse waves-effect waves-light pull-right m-r-10">Cancel</a>
                            <button id="btnSaveVariable" type="button" onclick="Variable.save()" class="btn waves-effect waves-light btn-info pull-right m-r-10">Save</button>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-sm-4 col-md-4 col-lg-5 pull-right">
                <div class="card">
                    <div class="card-header text-center">
                        Preview Pane
                    </div>
                    <div class="card-body">
                        <form class="form-horizontal" autocomplete="off">
                            <div style="height:200px">
                                <label id="ShowQuestion"></label><span class="text-danger" id="PreviewPane_IsRequired"></span><br />
                                <input class="form-control" name="typeNumeric" id="typeNumeric" value="" />
                                <textarea class="form-control hide" rows="3" cols="50" name="typeTextArea" id="typeTextArea"></textarea>

                                <div class="hide" id="divDatepicker">

                                </div>
                                


                                <div class="form-group hide" id="selectdropdownvalue">
                                    <select class="form-control" id="QuestionType" name="QuestionType">
                                        <option value="0">Select</option>
                                    </select>
                                </div>

                                <div class="form-group hide" id="selectLKUPvalue">
                                    <select class="form-control" id="PreviewLKUPDD" name="PreviewLKUPDD">
                                        <option value="0">Select</option>
                                        @foreach (var lkup in lookupVariablesPreviewViewModelList)
                                        {
                                            <option 
                                                    value="@lkup.EntityName" 
                                                    data-id="@lkup.Id"
                                                    data-entity-sub-type="@lkup.EntitySubtypeId"
                                                    data-entity-name="@lkup.EntityName"
                                                    data-entity-type="@lkup.EntityTypeId"
                                                    data-entity-group-guid="@lkup.EntityGroupId"
                                                    data-entity-group-name="@lkup.EntityGroupName"

                                                    >@lkup.EntityName</option>
                                        }
                                        
                                    </select>
                                </div>
                                <div class="form-group hide" id="selectcheckboxvalue">
                                </div>
                                <div class="form-group hide" id="selectradiobuttonvalue"></div>

                                <div class="form-group hide" id="previewColorPicker">
                                    <input type="color" id="previewColorPickerElement" name="previewColorPickerElement" class="form-control" value="#1f88e5" />
                                </div>
                                <div class="form-group hide" id="previewFileType">
                                    <input type="file" id="previewFileTypeElement" name="previewFileTypeElement" class="form-control" />
                                </div>
                                <input class="form-control hide preview-variable" name="numericvalue" id="numericvalue" value="" />
                                <input class="form-control hide preview-variable" name="formulavalue" id="formulavalue" value="" />
                                <p class="text-danger mb-0" id="PreviewPane_IsRequiredMessage"></p>
                                <p class="text-danger" id="PreviewPane_ValidationMessage"></p>
                                <input type="hidden" id="PreviewPane_ValidationName" />
                                <input type="hidden" id="PreviewPane_ValidationRegEx" />
                                <input type="hidden" id="PreviewPane_ValidationMin" />
                                <input type="hidden" id="PreviewPane_ValidationMax" />
                                <input type="hidden" id="PreviewPane_ValidationErrorMessage" />
                                <span class="help-block"><small id="previewHelpText"></small></span><br>
                            </div>
                            <button type="button" onclick="Variable.refresh()" class="btn waves-effect waves-light btn-info pull-right m-r-10">Refresh</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade user-search-poppus" id="confirm-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit existing variable or use as template?</h5>
            </div>
            <div class="modal-body">
                <div class="sf-submit-info">
                    Would you like to edit the existing variable you have selected or use it as a template for a new variable?                    
                </div>
                @if (IsProjectAdmin)
                            {
                <div class="sf-submit-info">
                    <span class="text-danger" style="font-size:smaller">
                        Note : If selected variable is edited, it will be saved as draft mode.
                    </span>
                </div>
                            }
            </div>
            <div class="modal-footer">
                <button type="button" id="btnEditVatiable" onclick="Variable.edit(false)" class="btn-sm waves-effect waves-light btn-info" data-dismiss="modal">Edit</button>
                <button type="button" onclick="Variable.edit(true)" class="btn-sm waves-effect waves-light btn-info" data-dismiss="modal">Template</button>
                <button type="button" class="btn-sm btn btn-inverse waves-effect waves-light" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade user-search-poppus" id="save-category-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Category</h5>
            </div>
            <div class="modal-body">
                <div class="sf-submit-info">
                    <form id="frm-add-category" class="form-horizontal" autocomplete="off">
                        <div class="form-group">
                            <label for="AddCategory"> Category Name<span class="text-danger">*</span>:</label>
                            <input class="form-control form-control-sm" type="text" name="addnewCategory" id="addnewCategory" value="" data-val="true" data-val-required="Category name is reqired." />
                            <span class="field-validation-valid form-control-feedback" data-valmsg-for="addnewCategory" data-valmsg-replace="true"></span>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="Category.savenewcategory()" class="btn-sm waves-effect waves-light btn-info">Save</button>
                    <button type="button" class="btn-sm btn btn-inverse waves-effect waves-light btn-cancel" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade user-search-poppus" id="change-categoryname-modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit New Category</h5>
            </div>
            <div class="modal-body">
                <div class="sf-submit-info">
                    <form id="frm-edit-category" class="form-horizontal" autocomplete="off">
                        <div class="form-group">
                            <label for="EditCategory"> Category Name<span class="text-danger">*</span>:</label>
                            <input class="form-control form-control-sm" type="text" name="editnewCategory" id="editnewCategory" data-val="true" data-val-required="Category name is reqired." />
                            <span class="field-validation-valid form-control-feedback" data-valmsg-for="editnewCategory" data-valmsg-replace="true"></span>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" onclick="Category.editCategoryName()" class="btn-sm waves-effect waves-light btn-info">Save</button>
                    <button type="button" class="btn-sm btn btn-inverse waves-effect waves-light btn-cancel" data-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>
</div>


<!--Delete Variables-->
<div class="modal fade user-search-poppus" id="manage-confirm" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm</h5>
            </div>
            <div class="modal-body">
                <div class="sf-submit-info">
                    Are you sure want to active/deactivate selected user?
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="Variable.delete()" class="btn-sm waves-effect waves-light btn-info" data-dismiss="modal">Yes</button>
                <button type="button" class="btn-sm  btn btn-inverse waves-effect waves-light" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>


<div class="hide">
    <div id="datepickerTemplate">        
        <div class="input-group mb-2 date-input">
                        <a href="#"
                           id="previewDatePickerElement"
                           title="previewDatePickerElement"
                           class="singledate form-control form-control-line customdatepicker"
                           data-type="combodate"
                           data-pk="1"
                           name="previewDatePickerElement"
                           data-title="previewDatePickerElement"
                           data-max-date="0d">Date</a>              
        </div>

    </div>
</div>



        @section Styles{
            <link href="/content/assets/plugins/ion-rangeslider/css/ion.rangeSlider.css" rel="stylesheet">
            <link href="/content/assets/plugins/ion-rangeslider/css/ion.rangeSlider.skinModern.css" rel="stylesheet">
            <link href="/content/assets/plugins/wizard/steps.css" rel="stylesheet">
            <link href="/content/assets/plugins/bootstrap-select/bootstrap-select.min.css" rel="stylesheet" />
            <link href="/content/assets/plugins/daterangepicker/daterangepicker.css" rel="stylesheet">
            <style>
                #Values li {
                    padding: 3px 3px 3px 10px;
                }
            </style>
        }

        @section Scripts {

            <script src="/content/assets/plugins/moment/moment.js"></script>
            <script src="/content/assets/plugins/daterangepicker/daterangepicker.js"></script>
            <script src="/content/assets/plugins/ion-rangeslider/js/ion-rangeSlider/ion.rangeSlider.min.js"></script>
            <script src="/content/assets/plugins/bootstrap-select/bootstrap-select.min.js" type="text/javascript"></script>
            <script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script src="/content/assets/plugins/x-editable/dist/bootstrap-editable/js/bootstrap-editable.js"></script>
            @Scripts.Render("~/bundles/jqueryval")
            <script>
                $(function () {
                    $('.selectpicker').selectpicker();
                    listActiveload();
                    $('.wizard-content ul li:eq(0)').removeClass('disabled').addClass('current');
                    $('#sidebarnav > li').removeClass('active');
                    $('#sidebarnav > li:nth-child(5)').addClass('active');
                    Variable.FillYearDropdown();
                    Variable.AllEntityTypeType();
                    Variable.AllEntityTypeSubtype();
                });

                $(document).ready(function () {
                    $("#save-category-modal").on('shown.bs.modal', function () {
                        $(this).find('input[type="text"]').focus();
                    });
                });

                $(document).ready(function () {
                    $("#change-categoryname-modal").on('shown.bs.modal', function () {
                        $(this).find('input[type="text"]').focus();
                    });
                });

                function listActiveload() {
                    $(".list-dropdown > a").click(function () {
                        if ($(this).parent().hasClass("active")) {
                            $(".list-dropdown", $(this).parent()).removeClass("active");
                            $(".list-submenu", $(this).parent()).slideUp(200);
                            $(this).parent().removeClass("active");
                        } else {
                            $(".list-dropdown", $(this).parent()).removeClass("active");
                            $(this).next(".list-submenu").slideDown(200);
                            $(this).parent().addClass("active");
                        }
                    });
                }
            </script>
            @Scripts.Render("~/apps/variables")
            @Scripts.Render("~/apps/categories")
        }